{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Hanzu\\\\Documents\\\\React Native Training\\\\Pemrog Mobile\\\\UTS\\\\KoMBatchLogin\\\\screens\\\\Login.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Constants from 'expo-constants';\nimport useTheme from \"../hooks/useTheme\";\nimport logo from \"../assets/images/logo/mascot_logo.png\";\n\nvar _useTheme = useTheme(),\n    palette = _useTheme.palette,\n    typography = _useTheme.typography,\n    radius = _useTheme.radius;\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: palette.common.white\n  },\n  centered: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 312,\n    height: 234\n  },\n  head: {\n    marginTop: 32,\n    marginBottom: 16,\n    fontWeight: 'bold',\n    fontSize: typography.size.xl\n  },\n  input: {\n    borderColor: palette.common.gray.main,\n    borderWidth: 1,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    fontFamily: 'Roboto',\n    borderRadius: radius.normal\n  },\n  button: {\n    backgroundColor: palette.primary.main,\n    borderRadius: radius.pills,\n    padding: 16,\n    alignItems: 'center'\n  },\n  alert: {\n    padding: 16,\n    marginBottom: 16,\n    borderRadius: radius.normal,\n    backgroundColor: palette.error.main\n  }\n});\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      shown = _React$useState6[0],\n      setShown = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      alert = _React$useState8[0],\n      setAlert = _React$useState8[1];\n\n  var handlerLogin = function handlerLogin() {\n    if (email === '' && password === '') {\n      setAlert(true);\n      return;\n    }\n\n    navigation.navigate('Main');\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 24,\n      paddingTop: Constants.statusBarHeight\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.centered],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.illustration,\n    source: logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.head,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Welcome back\"), alert ? React.createElement(View, {\n    style: styles.alert,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: palette.common.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Email and password should not empty\")) : null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    type: \"text\",\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    style: [styles.input, {\n      marginBottom: 8\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: !shown,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    textContentType: \"password\",\n    placeholder: \"Password\",\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 8,\n      marginBottom: 24\n    },\n    onPress: function onPress() {\n      return setShown(!shown);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: palette.text.secondary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, shown ? 'Hide' : 'Show', ' ', \"password\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handlerLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: palette.common.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Hanzu/Documents/React Native Training/Pemrog Mobile/UTS/KoMBatchLogin/screens/Login.js"],"names":["React","Constants","useTheme","logo","palette","typography","radius","styles","StyleSheet","create","container","flex","backgroundColor","common","white","centered","alignItems","justifyContent","width","height","head","marginTop","marginBottom","fontWeight","fontSize","size","xl","input","borderColor","gray","main","borderWidth","paddingHorizontal","paddingVertical","fontFamily","borderRadius","normal","button","primary","pills","padding","alert","error","LoginScreen","navigation","useState","email","setEmail","password","setPassword","shown","setShown","setAlert","handlerLogin","navigate","paddingTop","statusBarHeight","illustration","color","text","secondary"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAUA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;;gBAEwCD,QAAQ,E;IAAxCE,O,aAAAA,O;IAASC,U,aAAAA,U;IAAYC,M,aAAAA,M;;AAE7B,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAER,OAAO,CAACS,MAAR,CAAeC;AAFvB,GADoB;AAK/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,QADJ;AAERC,IAAAA,cAAc,EAAE;AAFR,GALqB;AAS/Bd,EAAAA,IAAI,EAAE;AACJe,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GATyB;AAa/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJC,IAAAA,UAAU,EAAE,MAHR;AAIJC,IAAAA,QAAQ,EAAEnB,UAAU,CAACoB,IAAX,CAAgBC;AAJtB,GAbyB;AAmB/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAExB,OAAO,CAACS,MAAR,CAAegB,IAAf,CAAoBC,IAD5B;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,iBAAiB,EAAE,EAHd;AAILC,IAAAA,eAAe,EAAE,CAJZ;AAKLC,IAAAA,UAAU,EAAE,QALP;AAMLC,IAAAA,YAAY,EAAE7B,MAAM,CAAC8B;AANhB,GAnBwB;AA2B/BC,EAAAA,MAAM,EAAE;AACNzB,IAAAA,eAAe,EAAER,OAAO,CAACkC,OAAR,CAAgBR,IAD3B;AAENK,IAAAA,YAAY,EAAE7B,MAAM,CAACiC,KAFf;AAGNC,IAAAA,OAAO,EAAE,EAHH;AAINxB,IAAAA,UAAU,EAAE;AAJN,GA3BuB;AAiC/ByB,EAAAA,KAAK,EAAE;AACLD,IAAAA,OAAO,EAAE,EADJ;AAELlB,IAAAA,YAAY,EAAE,EAFT;AAGLa,IAAAA,YAAY,EAAE7B,MAAM,CAAC8B,MAHhB;AAILxB,IAAAA,eAAe,EAAER,OAAO,CAACsC,KAAR,CAAcZ;AAJ1B;AAjCwB,CAAlB,CAAf;;AAyCA,IAAMa,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,wBACZ5C,KAAK,CAAC6C,QAAN,CAAe,EAAf,CADY;AAAA;AAAA,MAC/BC,KAD+B;AAAA,MACxBC,QADwB;;AAAA,yBAEN/C,KAAK,CAAC6C,QAAN,CAAe,EAAf,CAFM;AAAA;AAAA,MAE/BG,QAF+B;AAAA,MAErBC,WAFqB;;AAAA,yBAGZjD,KAAK,CAAC6C,QAAN,CAAe,KAAf,CAHY;AAAA;AAAA,MAG/BK,KAH+B;AAAA,MAGxBC,QAHwB;;AAAA,yBAIZnD,KAAK,CAAC6C,QAAN,CAAe,KAAf,CAJY;AAAA;AAAA,MAI/BJ,KAJ+B;AAAA,MAIxBW,QAJwB;;AAMtC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIP,KAAK,KAAK,EAAV,IAAgBE,QAAQ,KAAK,EAAjC,EAAqC;AACnCI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACD;;AACDR,IAAAA,UAAU,CAACU,QAAX,CAAoB,MAApB;AACD,GAND;;AAQA,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE/C,MAAM,CAACG,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACX8B,MAAAA,OAAO,EAAE,EADE;AAEXe,MAAAA,UAAU,EAAEtD,SAAS,CAACuD;AAFX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACjD,MAAM,CAACQ,QAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACkD,YADhB;AAEE,IAAA,MAAM,EAAEtD,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACa,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,EAYGqB,KAAK,GACJ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElC,MAAM,CAACkC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAEtD,OAAO,CAACS,MAAR,CAAeC;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CADI,GAMF,IAlBN,EAmBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEgC,KADT;AAEE,IAAA,YAAY,EAAE,sBAACa,IAAD;AAAA,aAAUZ,QAAQ,CAACY,IAAD,CAAlB;AAAA,KAFhB;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,YAAY,EAAC,eALf;AAME,IAAA,KAAK,EAAE,CAACpD,MAAM,CAACoB,KAAR,EAAe;AAAEL,MAAAA,YAAY,EAAE;AAAhB,KAAf,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAE,CAAC4B,KADpB;AAEE,IAAA,KAAK,EAAEF,QAFT;AAGE,IAAA,YAAY,EAAE,sBAACW,IAAD;AAAA,aAAUV,WAAW,CAACU,IAAD,CAArB;AAAA,KAHhB;AAIE,IAAA,eAAe,EAAC,UAJlB;AAKE,IAAA,WAAW,EAAC,UALd;AAME,IAAA,KAAK,EAAEpD,MAAM,CAACoB,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEN,MAAAA,SAAS,EAAE,CAAb;AAAgBC,MAAAA,YAAY,EAAE;AAA9B,KADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM6B,QAAQ,CAAC,CAACD,KAAF,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAEtD,OAAO,CAACuD,IAAR,CAAaC;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,GAAG,MAAH,GAAY,MADpB,EAEG,GAFH,aAJF,CAjBF,EA2BE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE3C,MAAM,CAAC8B,MADhB;AAEE,IAAA,OAAO,EAAEgB,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAEtD,OAAO,CAACS,MAAR,CAAeC;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CA3BF,CAnBF,CADF,CADF;AA0DD,CAxED;;AA0EA,eAAe6B,WAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Image,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport useTheme from '../hooks/useTheme';\r\nimport logo from '../assets/images/logo/mascot_logo.png';\r\n\r\nconst { palette, typography, radius } = useTheme();\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.common.white,\r\n  },\r\n  centered: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  logo: {\r\n    width: 312,\r\n    height: 234,\r\n  },\r\n  head: {\r\n    marginTop: 32,\r\n    marginBottom: 16,\r\n    fontWeight: 'bold',\r\n    fontSize: typography.size.xl,\r\n  },\r\n  input: {\r\n    borderColor: palette.common.gray.main,\r\n    borderWidth: 1,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    fontFamily: 'Roboto',\r\n    borderRadius: radius.normal,\r\n  },\r\n  button: {\r\n    backgroundColor: palette.primary.main,\r\n    borderRadius: radius.pills,\r\n    padding: 16,\r\n    alignItems: 'center',\r\n  },\r\n  alert: {\r\n    padding: 16,\r\n    marginBottom: 16,\r\n    borderRadius: radius.normal,\r\n    backgroundColor: palette.error.main,\r\n  },\r\n});\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [shown, setShown] = React.useState(false);\r\n  const [alert, setAlert] = React.useState(false);\r\n\r\n  const handlerLogin = () => {\r\n    if (email === '' && password === '') {\r\n      setAlert(true);\r\n      return;\r\n    }\r\n    navigation.navigate('Main');\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={{\r\n        padding: 24,\r\n        paddingTop: Constants.statusBarHeight,\r\n      }}\r\n      >\r\n        <View style={[styles.centered]}>\r\n          <Image\r\n            style={styles.illustration}\r\n            source={logo}\r\n          />\r\n        </View>\r\n        <Text style={styles.head}>Welcome back</Text>\r\n        {alert ? (\r\n          <View style={styles.alert}>\r\n            <Text style={{ color: palette.common.white }}>\r\n              Email and password should not empty\r\n            </Text>\r\n          </View>\r\n        ) : null}\r\n        <View>\r\n          <TextInput\r\n            value={email}\r\n            onChangeText={(text) => setEmail(text)}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            keyboardType=\"email-address\"\r\n            style={[styles.input, { marginBottom: 8 }]}\r\n          />\r\n          <TextInput\r\n            secureTextEntry={!shown}\r\n            value={password}\r\n            onChangeText={(text) => setPassword(text)}\r\n            textContentType=\"password\"\r\n            placeholder=\"Password\"\r\n            style={styles.input}\r\n          />\r\n          <TouchableOpacity\r\n            style={{ marginTop: 8, marginBottom: 24 }}\r\n            onPress={() => setShown(!shown)}\r\n          >\r\n            <Text style={{ color: palette.text.secondary }}>\r\n              {shown ? 'Hide' : 'Show'}\r\n              {' '}\r\n              password\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={handlerLogin}\r\n          >\r\n            <Text style={{ color: palette.common.white }}>Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}